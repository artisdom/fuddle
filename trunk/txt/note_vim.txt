. vim

[tips]
tip 1: use google
//maximize current windown
<c-w> _
//make all windows equal size
<c-w> =

//set window position
:winpos 1 1

//date time
*useful vimrc tip
insert current date like 2008/01/26 六 
:r! date /T
or use strftime(...) provided by vim

//edit, insert
press CTRL-R you can insert to everywhere include command line, eg. CTRL-R / will insert last search pattern 
search about help of <C-R>

//window
press CTRL-W H ,move current window to left can also make horizen split change to vertical
CTRL-W x, will do a swap action.

*useful short tip
CTRL-^	switch to alternate buffer
repeat last : command use @:

//dos to unix
set ff=unix
:w

//see registers
:registers
//insert register contents
<C-R> #regnumber


================================================================================


[usr_29]
//tag
:tags	show where you are
:tag	go to the top of tag stack
number CTRL-T	go back(support multi-level jump)
CTRL-]			go down

:stag		operate as :tag but split
CTRL-W ]	same as CTRL-] but split

ctags -R .
:set tags=~/proj/tags

:tnext
:tselect
[aaa]

*cool 
:tag /elp then CTRL-D will display the tags which match this pattern
or :tselect /elp will display a list, previous one is table

//preview window
:ptag		preview this tag
CTRL-W }	preview the tag under cursor
:pclose		close previous window
:pedit
:psearch

*cool
use % jump , (), [], #ifdef ... #endif
use [# jump to the start of # statment, ]# to the end
for current blocks, use [{ and ]}
[[ to current start, ]] to next start
[] to previous end, ][ to current end
damn ! that so confused, just remember [[ for current start and ]] for next start is ok.
[( , ]) moves in braces
[/ , ]/ moves in comments

// find a global identifiers 
[I	find where this identifier declared.
:checkpath	check if included files can be find.
:set path=+....

*cool
/usr/*/include		subdirectories just one level
/usr/**/include 	all subdirectories	  

*stop reading usr_29.txt at line:528


================================================================================
[usr_30]
//compile
set makeprg=mingw32-make


[pattern.txt]
//match two words
/word1\|word2

:help magic
a
aaaa
aaaaaa



from work place
================================================================================
window-moving
	<C-W><C-R> window swap when there are only two windows.

script
	string:
	=~ match pattern, !~ don't match pattern ; add ? to ignore case, add # to check case
	function:
	a:xxx means a argument variable

key mapping	
:map <F4>  @='3w'<CR>

spell check
setlocal spell spelllang=en_us

insert mode
<c-a> insert last insert
<c-y> insert the line above 

:digraphs
<c-k> co , will insert a %




================================================================================
Questions:
nnoremap

Search There stuff:
sniff+
cscope



查看头文件 gf,CTRL+W f
选择 ap,as,a{
块缩进 >i{,>a{


两个buffer之间切换 C-^
增加doc文件后用helptags doc扫描


memo the google lecture

habit 4: a file seldom comes alone
gf - goto header file
[I - find all positions the word appears
[<TAB> - directly goto the header file the word appears

habit 6: text is structured
quickfix
cfile %




window-moving
	<C-W><C-R> window swap when there are only two windows.

script
	string:
	=~ match pattern, !~ don't match pattern ; add ? to ignore case, add # to check case
	function:
	a:xxx means a argument variable

key mapping	
:map <F4>  @='3w'<CR>

spell check
setlocal spell spelllang=en_us

insert mode
<c-a> insert last insert
<c-y> insert the line above 

:digraphs
<c-k> co , will insert a %

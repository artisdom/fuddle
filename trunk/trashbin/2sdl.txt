2009-5-26
-------------------------------------------------
vr present, envstr use array instead of malloc to avoid malloc error

QString to char*: (char*)f.toLatin1().data()

2009-5-25
-------------------------------------------------
put env before sdl_init will take effect at once.

SDL envvar must stay in memory, do not free that memory,
this action will cause segment fault(MpegaDecCreate).


-------------------------------------------------
2009-5-22

xdpyinfo and xvinfo

~/hostshare/workspace$ xvinfo
X-Video Extension version 2.2
screen #0
  Adaptor #0: "VMware Video Engine"
    number of ports: 1
    port base: 60
    operations supported: PutImage 
    supported visuals:
      depth 24, visualID 0x22
      depth 24, visualID 0x23
      depth 24, visualID 0x24
      depth 24, visualID 0x25
    number of attributes: 2
      "XV_COLORKEY" (range 0 to 16777215)
              client settable attribute
              client gettable attribute
      "XV_AUTOPAINT_COLORKEY" (range 0 to 1)
              client settable attribute
              client gettable attribute
    maximum XvImage size: 2048 x 2048
    Number of image formats: 3
      id: 0x32315659 (YV12)
        guid: 59563132-0000-0010-8000-00aa00389b71
        bits per pixel: 12
        number of planes: 3
        type: YUV (planar)
      id: 0x32595559 (YUY2)
        guid: 59555932-0000-0010-8000-00aa00389b71
        bits per pixel: 16
        number of planes: 1
        type: YUV (packed)
      id: 0x59565955 (UYVY)
        guid: 55595659-0000-0010-8000-00aa00389b71
        bits per pixel: 16
        number of planes: 1
        type: YUV (packed)

-------------------------------------------------
11:53 2009-5-14
#define SDL_VIDEO_DRIVER_X11_DYNAMIC "libX11.so.6"
#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XEXT "libXext.so.6"
#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XRANDR "libXrandr.so.2"
#define SDL_VIDEO_DRIVER_X11_DYNAMIC_XRENDER "libXrender.so.1"

#include <X11/Xlib.h>
#include <X11/Xatom.h>

modify Makefile.rule to make only .so with out .a

LIBNAME
LIBNAME.SO: OBJS

Makefile template - blogger

-------------------------------------------------
15:14 2009-5-13
1.move yuvoverlay out of surface, video screen will be cuted
2.SDL_gfx zoom/rotate for RGB? no yuvoverlay func

DAMN
undefined reference to `__stack_chk_fail'
try gcc -fno-stack-protector

ExternalDependency/libwin32
ExternalDependency/libavidemux
-------------------------------------------------
16:17 2009-5-12

libfb
	+set dstrect
	+video enable, not complete
	+get rid of old video pic 2009-5-14

libfb/test
	DEFMENUITEM(open)
	DEFMENUITEM(close)
	DEFMENUITEM(setdstrect)
	DEFMENUITEM(setrotate)
	DEFMENUITEM(vpcontrol)
demo
	+func_setdstrect

libsdl
	+display ok, color ok (use SDL_IYUV_OVERLAY to open overlay
	look into SDL_CreateYUV_SW to figure out how many mem alloced by sdl
	//SDL_putenv  SDL_VIDEO_WINDOW_POS didn't work, export works
	do this before SDL_init() 


sdl_widget
sdl_gfx
sdl_ttf

-------------------------------------------------
sdl yuv overlay
http://www.dranger.com/ffmpeg/tutorial02.html
YV12 is the fastest
There is another YUV format called YUV420P that is the same as YV12, except the U and V arrays are switched.




-------------------------------------------------
0x002aa3eb in yuv2rgb_c_16 (src=0x6083310, srcStride=0x9d5a820, srcSliceY=0, srcSliceH=240, dst=0x60832d8,
    dstStride=0x60832dc, dst_w=320)

crash here

sdl work fine both on framebuffer and x

libvrpresent.dll link with -lSDL

modify Makefile.rules:168 
$(TOP)/lib/$(LIBNAMESO): $(TOP)/lib/$(LIBNAME)
	@echo "-------------------------------------------------------------------"
	@echo "Creating shared library $@ ..."
	@echo "-------------------------------------------------------------------"
	@echo ""
	$(LD) -shared -o $@ -lSDL --whole-archive $^


-------------------------------------------------

dst[0] = m_pBuff+2048*(m_screeninfo.yres-240)-640;

dst[0] = m_pBuff+m_fbfinfo.line_length*(m_rDst.y-1)+m_rDst.x*2;

clipinfo.w
clipinfo.h

r.x
r.y

-------------------------------------------------
cp /dev/fb0 snapshot
export FRAMEBUFFER=/dev/fb1
mmap, ioctl
color map, planes, packed pixels
<linux/fb.h>
fbset
horizontal retrace,
fbcon
-------------------------------------------------
mmap
offset = n * PAGESIZE
MAP_SHARED, msync

-------------------------------------------------


-------------------------------------------------
1. test code
2. imple present_framebuffer
3. imple present_SDL



--------------------HOW THEY USE PRESENT MODULE-----------------------------
CPlaybackEngine/CVideoRenderer
-m_pPresent

1.create
HRESULT CPlaybackEngine::CreateVRPresent()
-LoadLibrary(_T("./LibVRPresent.dll"));
	fpVpCreator = (FP_VPCREATOR)GetProcAddress(m_hVRPresentDLL, "CreateVideoPresenter");
	m_pPresent = (*fpVpCreator)();


GfxPresentFramebuffer.cpp
IMcVideoPresenter *CreateVideoPresenter()
{
	return new CVRPresentFramebuffer();
}

2.open/close
CPlaybackEngine::Set	EMC_PROPID_ENG_VIDEOENABLE
<...>
CPlaybackEngine::ProcessEvent	EMC_EVENT_VIDRND_SOURCE_SIZE_CHANGED
CPlaybackEngine::Close()

3.CreateSurface/SetSurface
CVideoRenderer::Set	EMC_PROPID_VIDRND_VRPRESENT

4.Present
CVideoRenderer::ProcessSample
-VR_SURFACE_TYPE  type = 4

5.Set
CPlaybackEngine::Set
CPlaybackEngine::ProcessEvent	EMC_EVENT_VIDRND_SOURCE_SIZE_CHANGED
<m_pPresent->Set(EMC_PROPSET_GFXCTXT, MC_PROPID_VP_RECTDST, 0, 0, &m_rDst, 0);>


------------------------------------------------------------------------------
CVideoRenderer::Pump()
IEmcMediaType->GetFormatBuffer(EMC_VIDEOBUFFER_INFO vbi)




CI_Player_SetConfig(..., CI_CFG_DISPLAY_PARAM, ...)
	pPlaybackSDK->m_pEngine->Set(EMC_PROPSET_VIDRND, EMC_PROPID_VIDRND_RECTDST, 0, 0, (LPVOID)&rc, (DWORD)sizeof(RECT));

CI_Player_SetConfig(..., CI_CFG_COMMON_ROTATE, ...)
	pPlaybackSDK->m_pEngine->Set(EMC_PROPSET_VIDRND, EMC_PROPID_VIDRND_ROTATION, 0, 0, &value, sizeof(unsigned long));

CI_Player_SetConfig(..., CI_CFG_VIDEO_RENDER, ...)
	pPlaybackSDK->m_pEngine->Set(EMC_PROPSET_ENG, EMC_PROPID_ENG_VIDEOENABLE, 0, 0, &dwEnableVideoRender, sizeof(DWORD));

